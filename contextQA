<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>數位陷阱求生記 (10幕擴充版)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tone/14.7.77/Tone.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;500;700;900&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Noto Sans TC', sans-serif; background-color: #0f172a; color: #e2e8f0; overflow: hidden; }
        .container-box { background-color: #1e293b; border: 1px solid #334155; }
        .screen { transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; }
        .screen.hidden { opacity: 0; transform: scale(0.95); pointer-events: none; position: absolute; }
        .choice-btn { transition: all 0.2s ease-in-out; }
        .choice-btn:hover { transform: scale(1.03); background-color: #334155; box-shadow: 0 0 15px rgba(30, 41, 59, 0.5); }
        .flash-success { animation: flash-success 0.7s ease-out; }
        .flash-danger { animation: flash-danger 0.7s ease-out; }
        @keyframes flash-success { 0%, 100% { box-shadow: 0 0 0 0 rgba(34, 197, 94, 0); } 50% { box-shadow: 0 0 30px 10px rgba(34, 197, 94, 0.5); } }
        @keyframes flash-danger { 0%, 100% { box-shadow: 0 0 0 0 rgba(239, 68, 68, 0); } 50% { box-shadow: 0 0 30px 10px rgba(239, 68, 68, 0.5); } }
        .result-icon, .feedback-icon { animation: pop-in 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55); }
        @keyframes pop-in { 0% { transform: scale(0); } 100% { transform: scale(1); } }
        #feedback-modal { transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out; }
        #feedback-modal.hidden { opacity: 0; transform: scale(1.1); pointer-events: none; }
    </style>
</head>
<body class="flex items-center justify-center min-h-screen p-4">

    <div id="app-container" class="w-full max-w-2xl mx-auto relative">

        <!-- Welcome Screen -->
        <div id="welcome-screen" class="screen container-box p-8 rounded-2xl text-center shadow-2xl">
            <h1 class="text-4xl font-black text-cyan-300 mb-4">數位陷阱求生記</h1>
            <p class="text-slate-300 mb-8">你在網路世界的每個選擇，都可能導向不同的命運。<br>準備好迎接挑戰了嗎？</p>
            <button id="start-btn" class="w-full bg-cyan-600 hover:bg-cyan-700 text-white font-bold py-4 px-6 rounded-lg text-lg shadow-lg transition-transform transform hover:scale-105">開始挑戰</button>
        </div>

        <!-- Game Screen -->
        <div id="game-screen" class="screen hidden container-box p-8 rounded-2xl shadow-2xl w-full">
            <div id="story-text" class="prose prose-invert prose-lg mb-8 bg-slate-800/50 p-6 rounded-md min-h-[150px]"></div>
            <div id="choices-container" class="grid grid-cols-1 gap-4"></div>
        </div>

        <!-- Result Screen -->
        <div id="result-screen" class="screen hidden container-box p-8 rounded-2xl shadow-2xl text-center w-full">
            <div id="result-icon" class="text-8xl mb-4"></div>
            <h2 id="result-title" class="text-4xl font-black mb-4"></h2>
            <div id="result-content" class="text-slate-300 text-lg mb-8"></div>
            <button id="restart-btn" class="w-full bg-amber-500 hover:bg-amber-600 text-slate-900 font-bold py-3 px-6 rounded-lg text-lg">重新挑戰一次</button>
        </div>
    </div>
    
    <!-- Feedback Modal -->
    <div id="feedback-modal" class="hidden fixed inset-0 bg-black/70 flex items-center justify-center p-4">
        <div class="container-box w-full max-w-md mx-auto p-6 rounded-2xl text-center">
            <div id="feedback-icon" class="text-6xl mb-4"></div>
            <h3 id="feedback-title" class="text-2xl font-bold mb-3"></h3>
            <p id="feedback-text" class="text-slate-300 mb-6"></p>
            <button id="feedback-continue-btn" class="w-full bg-cyan-600 hover:bg-cyan-700 text-white font-bold py-3 px-5 rounded-lg">繼續</button>
        </div>
    </div>

    <script>
        const gameData = {
            scenes: {
                start: {
                    text: `<h3>第一幕：起點</h3><p>暑假來了，你在網路上要做什麼？</p>`,
                    choices: {
                        job: { text: '找個輕鬆的打工賺零用錢。', nextScene: 'job_ad', feedback: { type: 'neutral', title: '挑戰開始', text: '想靠自己賺錢是好事，但網路上的工作機會充滿了未知數...' }},
                        ticket: { text: '偶像要開演唱會，搶票！', nextScene: 'ticket_soldout', feedback: { type: 'neutral', title: '挑戰開始', text: '對偶像的熱愛，有時會讓我們忽略危險...' }},
                        game: { text: '賣掉練了很久的遊戲帳號。', nextScene: 'game_sell', feedback: { type: 'neutral', title: '挑戰開始', text: '虛擬世界的交易，規則和現實世界一樣嚴酷...' }},
                        dating: { text: '試試看交友軟體，認識新朋友。', nextScene: 'dating_match', feedback: { type: 'neutral', title: '挑戰開始', text: '在尋求連結的同時，也要小心虛假的面具...' }}
                    }
                },
                // --- Job Scam Path ---
                job_ad: {
                    text: `<h3>第二幕：高薪誘惑</h3><p>你在社團滑到一則廣告：「誠徵領錢專員，日薪三千，現領」。看起來好到不真實，但你又有點心動...</p>`,
                    choices: {
                        inquire: { text: '私訊問看看，多了解總沒壞處。', nextScene: 'job_contact', feedback: { type: 'danger', title: '⚠️ 風險之始', text: '好奇心是正常的，但主動接觸這種高風險廣告，就等於將自己暴露在詐騙集團的狩獵範圍內。' }},
                        ignore: { text: '太可疑了，直接忽略。', nextScene: 'end_safe_job', feedback: { type: 'success', title: '✅ 明智的忽略', text: '你應用了「質疑」的黃金法則。對於任何「高薪、輕鬆」的工作抱持懷疑，是保護自己的第一步。' }}
                    }
                },
                job_contact: {
                    text: `<h3>第三幕：接觸</h3><p>一位自稱「宏俊哥」的人秒回，他口氣專業，說是幫電商處理帳務，邀請你明天在便利商店見面詳談。</p>`,
                    choices: {
                        meet: { text: '只是見面聊聊，應該還好，去看看。', nextScene: 'job_task', feedback: { type: 'danger', title: '⚠️ 風險升級', text: '與陌生網友見面本身就有風險，更何況是來源可疑的打工。對方正在誘使你離開安全的網路，進入實體陷阱。' }},
                        ask: { text: '要求對方提供公司統編，否則不去。', nextScene: 'end_safe_job_2', feedback: { type: 'success', title: '✅ 漂亮的查證', text: '你應用了「查證」的黃金法則。要求提供可驗證的公司資訊，是戳破騙局的有效方法。對方通常會在此時消失。' }}
                    }
                },
                job_task: {
                    text: `<h3>第四幕：任務</h3><p>在便利商店，宏俊哥交給你一張提款卡和密碼，他說：「這是廠商的貨款，你幫我領出來就好。」他看起來很誠懇，不像壞人。</p>`,
                    choices: {
                        withdraw: { text: '只是幫忙領錢而已...照做。', nextScene: 'end_danger_job', feedback: { type: 'danger', title: '🚨 致命的選擇！', text: '這是成為詐騙集團「車手」的致命一步！你即將經手贓款，面臨無法挽回的法律後果。' }},
                        refuse: { text: '用別人的卡領錢太奇怪了，果斷拒絕。', nextScene: 'end_safe_job_3', feedback: { type: 'success', title: '🎉 成功守住底線！', text: '你應用了求職防騙「三不」原則！絕不經手來路不明的金融工具，是避免成為車手的最重要關鍵。' }}
                    }
                },
                // --- Ticket Scam Path ---
                ticket_soldout: {
                    text: `<h3>第五幕：一票難求</h3><p>你最愛的偶像演唱會門票秒殺... 心碎的你在粉絲社團看到一則貼文：「佛心原價讓票一張！」</p>`,
                     choices: {
                        dm: { text: '立刻私訊！這是我的希望！', nextScene: 'ticket_contact', feedback: { type: 'danger', title: '⚠️ 踏入陷阱', text: '在渴望與錯失恐懼(FOMO)的驅使下，你進入了騙子預設好的狩獵場。' }},
                        official: { text: '只相信官方轉售平台，再等等看。', nextScene: 'end_safe_ticket', feedback: { type: 'success', title: '✅ 理性的選擇', text: '堅持官方管道是避免門票詐騙最有效的方法。耐心是你的盾牌。' }}
                    }
                },
                ticket_contact: {
                    text: `<h3>第六幕：時間壓力</h3><p>賣家很親切，也傳了購票證明截圖。他說：「很多人在問，10分鐘內沒匯款就讓給別人！」</p>`,
                     choices: {
                        transfer: { text: '時間緊迫，馬上轉帳！', nextScene: 'end_danger_ticket', feedback: { type: 'danger', title: '🚨 衝動的代價', text: '「急迫性」是騙子最愛的武器，它讓你沒時間思考。直接匯款等於放棄所有保障。' }},
                        meet: { text: '堅持面交或使用有保障的平台交易。', nextScene: 'end_safe_ticket_2', feedback: { type: 'success', title: '✅ 漂亮的防守', text: '任何拒絕安全交易方式的賣家，都有極高的詐騙嫌疑。你成功守住了錢包。' }}
                    }
                },
                // --- Gaming Scam Path ---
                game_sell: {
                    text: `<h3>第七幕：高價誘惑</h3><p>你在論壇賣帳號，一位買家出價比你預期的還高。他說：「為確保帳號沒問題，我需要先登入驗貨。」</p>`,
                    choices: {
                        give_pass: { text: '聽起來合理，把帳密給他。', nextScene: 'end_danger_game', feedback: { type: 'danger', title: '🚨 致命的信任', text: '帳號密碼就是你數位資產的鑰匙！交出去的瞬間，你就失去了所有權。' }},
                        use_platform: { text: '不行，我們必須透過有保障的交易平台。', nextScene: 'end_safe_game', feedback: { type: 'success', title: '✅ 守護了資產', text: '堅持使用官方或有信譽的第三方平台，是保護自己虛擬財產的不二法門。' }}
                    }
                },
                 // --- Dating Scam Path ---
                dating_match: {
                    text: `<h3>第八幕：完美情人</h3><p>你在交友軟體上認識一位對象，溫柔體貼，善解人意，你們聊了一個月，感覺就像靈魂伴侶。</p>`,
                    choices: {
                        continue_chat: { text: '繼續深入了解，感覺遇到對的人了。', nextScene: 'dating_crisis', feedback: { type: 'neutral', title: '情感升溫', text: '網路上的完美人設，可能是精心設計的劇本。' }}
                    }
                },
                dating_crisis: {
                    text: `<h3>第九幕：突發危機</h3><p>某天，對方突然說家人急病住院需要用錢，拜託你幫忙，並承諾下週就還。</p>`,
                    choices: {
                        help: { text: '他這麼可憐，當然要幫！', nextScene: 'dating_pressure', feedback: { type: 'danger', title: '⚠️ 情感陷阱', text: '利用「同情心」是假交友詐騙的核心。你已經被鎖定為目標。' }},
                        comfort: { text: '關心他，但委婉表示無法借錢。', nextScene: 'end_safe_dating', feedback: { type: 'success', title: '✅ 理性戰勝感性', text: '「見面前談錢就是詐騙」，你守住了這條最重要的防線，沒有被同情心綁架。' }}
                    }
                },
                dating_pressure: {
                    text: `<h3>第十幕：情感勒索</h3><p>你有些猶豫，對方卻說：「我以為你是在乎我的...沒想到你這麼不信任我！」</p>`,
                     choices: {
                        surrender: { text: '我不是不信你...好吧，我匯款。', nextScene: 'end_danger_dating', feedback: { type: 'danger', title: '🚨 被情感綁架', text: '這是典型的情感勒索，利用你的罪惡感逼你就範。一旦匯款，只會有無數個新的藉口等著你。' }},
                        stand_firm: { text: '我很在乎你，但真的無法匯款。', nextScene: 'end_safe_dating', feedback: { type: 'success', title: '🎉 掙脫了枷鎖', text: '你成功識破了情感勒索！保護自己不代表沒有同情心，這是成熟的表現。' }}
                    }
                }
            },
            outcomes: {
                end_safe_job: { title: '👏 防禦成功！', content: '<p>你成功避開了求職陷阱的誘惑！直接忽略高風險訊息，是最安全的防守。</p>' },
                end_safe_job_2: { title: '👏 防禦成功！', content: '<p>你的警覺心讓詐騙集團無法得逞！查證是戳破謊言的最佳武器。</p>' },
                end_safe_job_3: { title: '🎉 完美守護！', content: '<p>你在最關鍵的一步，守住了底線！你保住了自己清白的未來。</p>' },
                end_danger_job: { title: '☠️ 掉入陷阱！', content: '<p>在你領出錢的那一刻，埋伏的警察一擁而上...你，成為了詐騙集團的「車手」，將面臨刑責與鉅額賠償，留下永久的前科紀錄。</p>' },
                end_safe_ticket: { title: '👏 防禦成功！', content: '<p>你沒有被錯失恐懼(FOMO)綁架，堅持了安全的購票原則！</p>' },
                end_safe_ticket_2: { title: '🎉 完美守護！', content: '<p>你識破了騙子的時間壓力話術，成功保護了你的錢包和看演唱會的好心情！</p>' },
                end_danger_ticket: { title: '☠️ 掉入陷阱！', content: '<p>你匯款後，對方就消失了。你不但損失了錢，更錯過了夢寐以求的演唱會。</p>' },
                end_safe_game: { title: '🎉 完美守護！', content: '<p>你保護了自己辛苦練成的帳號！在虛擬世界，規則和現實一樣重要。</p>' },
                end_danger_game: { title: '☠️ 掉入陷阱！', content: '<p>對方一登入就改掉了你的密碼，你的心血全部化為烏有，他從此消失。</p>' },
                end_safe_dating: { title: '🎉 完美守護！', content: '<p>你守住了情感和理智的界線，沒有讓虛假的愛情傷害到你真實的人生。</p>' },
                end_danger_dating: { title: '☠️ 掉入陷阱！', content: '<p>你匯出了第一筆錢，接下來只會有更多的藉口和謊言，直到你被榨乾為止。這就是殘酷的「殺豬盤」。</p>' }
            }
        };

        const welcomeScreen = document.getElementById('welcome-screen');
        const gameScreen = document.getElementById('game-screen');
        const resultScreen = document.getElementById('result-screen');
        
        const startBtn = document.getElementById('start-btn');
        const restartBtn = document.getElementById('restart-btn');

        const storyText = document.getElementById('story-text');
        const choicesContainer = document.getElementById('choices-container');
        
        const resultIcon = document.getElementById('result-icon');
        const resultTitle = document.getElementById('result-title');
        const resultContent = document.getElementById('result-content');
        
        const appContainer = document.getElementById('app-container');
        
        const feedbackModal = document.getElementById('feedback-modal');
        const feedbackIcon = document.getElementById('feedback-icon');
        const feedbackTitle = document.getElementById('feedback-title');
        const feedbackText = document.getElementById('feedback-text');
        const feedbackContinueBtn = document.getElementById('feedback-continue-btn');

        let audioStarted = false;
        let synth, successSynth, failureSynth;

        function initializeAudio() {
            if (audioStarted) return;
            Tone.start();
            synth = new Tone.Synth({ oscillator: { type: 'sine' }, envelope: { attack: 0.01, decay: 0.1, sustain: 0.2, release: 0.2 } }).toDestination();
            successSynth = new Tone.PolySynth(Tone.Synth, { envelope: { attack: 0.01, release: 0.4 } }).toDestination();
            failureSynth = new Tone.Synth({ oscillator: { type: 'fatsawtooth' }, envelope: { attack: 0.01, decay: 0.7, sustain: 0.1, release: 0.2 } }).toDestination();
            failureSynth.volume.value = -6;
            audioStarted = true;
        }
        
        const playSound = {
            click: () => audioStarted && synth.triggerAttackRelease('C5', '8n'),
            success: () => audioStarted && successSynth.triggerAttackRelease(['G5', 'E6'], '8n'),
            failure: () => audioStarted && failureSynth.triggerAttackRelease('C3', '4n')
        };
        
        startBtn.addEventListener('click', startGame);
        restartBtn.addEventListener('click', startGame);

        function showScreen(screenToShow) {
            [welcomeScreen, gameScreen, resultScreen].forEach(screen => {
                screen.classList.add('hidden');
            });
            screenToShow.classList.remove('hidden');
        }

        function startGame() {
            if (!audioStarted) initializeAudio();
            playSound.click();
            showScene('start');
            showScreen(gameScreen);
        }

        function showScene(sceneKey) {
            const scene = gameData.scenes[sceneKey];
            storyText.innerHTML = scene.text;
            choicesContainer.innerHTML = '';

            Object.values(scene.choices).forEach(choice => {
                const button = document.createElement('button');
                button.className = 'choice-btn w-full bg-slate-700 text-white font-bold py-4 px-6 rounded-lg text-lg text-left';
                button.innerHTML = choice.text;
                button.onclick = () => makeChoice(choice);
                choicesContainer.appendChild(button);
            });
        }

        function makeChoice(choice) {
            playSound.click();
            showFeedback(choice.feedback, choice.nextScene);
        }

        function showFeedback(feedback, nextSceneKey) {
            const isSuccess = feedback.type === 'success';
            const isNeutral = feedback.type === 'neutral';
            
            const flashClass = isSuccess ? 'flash-success' : (isNeutral ? '' : 'flash-danger');
            
            if (flashClass) appContainer.classList.add(flashClass);
            if (!isNeutral) playSound[isSuccess ? 'success' : 'failure']();
            
            feedbackIcon.textContent = isSuccess ? '✅' : (isNeutral ? '🤔' : '⚠️');
            feedbackTitle.textContent = feedback.title;
            feedbackText.textContent = feedback.text;
            
            if (isSuccess) feedbackTitle.className = "text-2xl font-bold mb-3 text-green-400";
            else if (isNeutral) feedbackTitle.className = "text-2xl font-bold mb-3 text-cyan-400";
            else feedbackTitle.className = "text-2xl font-bold mb-3 text-rose-400";
            
            feedbackModal.classList.remove('hidden');

            feedbackContinueBtn.onclick = () => {
                playSound.click();
                feedbackModal.classList.add('hidden');
                if (flashClass) appContainer.classList.remove(flashClass);
                
                if (gameData.scenes[nextSceneKey]) {
                    showScene(nextSceneKey);
                } else if (gameData.outcomes[nextSceneKey]) {
                    showOutcome(nextSceneKey);
                }
            };
        }

        function showOutcome(outcomeKey) {
            const outcome = gameData.outcomes[outcomeKey];
            const isSafe = outcomeKey.includes('safe');

            resultIcon.textContent = isSafe ? '🏆' : '☠️';
            resultTitle.textContent = outcome.title;
            resultContent.innerHTML = outcome.content;
            
            resultTitle.className = `text-4xl font-black mb-4 ${isSafe ? 'text-green-400' : 'text-rose-400'}`;

            showScreen(resultScreen);
        }
    </script>
</body>
</html>

